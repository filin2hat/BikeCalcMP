name: 🚴‍♂️ BikeCalc Pro CI/CD

on:
  push:
    branches: ['master', 'develop', 'feature/**', 'task/**']
  pull_request:
    branches: ['master', 'develop']
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  # ===============================================
  # 🧪 ТЕСТИРОВАНИЕ И ЛИНТИНГ
  # ===============================================
  test:
    name: 🧪 Tests & Linting
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Debug Info
        run: |
          echo "🔍 Debug Information:"
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Commit Message: ${{ github.event.head_commit.message }}"

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: 🔍 Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: 🧪 Run Unit Tests (KMP modules only)
        run: ./gradlew :data:pressure:desktopTest --parallel --build-cache

      - name: 🔍 Run Detekt Analysis
        run: ./gradlew detekt --parallel
        shell: bash

      - name: 📦 Upload Test & Lint Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-and-lint-reports
          path: |
            **/build/reports/**
            **/build/test-results/**
          retention-days: 7

      # Report step removed as requested

  # ===============================================
  # 🏗️ МОДУЛЬНАЯ СБОРКА
  # ===============================================
  build-modules:
    name: 🏗️ Build Modules
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: test

    strategy:
      fail-fast: false
      matrix:
        module: 
          - ":core:model"
          - ":core:common" 
          - ":core:database"
          - ":domain:pressure"
          - ":domain:development"
          - ":data:pressure"
          - ":data:development"
          - ":designsystem"
          - ":feature:pressure"
          - ":feature:development"

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔨 Build Module ${{ matrix.module }}
        run: ./gradlew ${{ matrix.module }}:build --parallel --build-cache

      - name: 📦 Upload Module Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.module }}
          path: ${{ matrix.module }}/build/reports/**
          retention-days: 7

      - name: 📦 Upload Module Artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: module-${{ matrix.module }}-artifacts
          path: |
            ${{ matrix.module }}/build/libs/
            ${{ matrix.module }}/build/outputs/
          retention-days: 1

  # ===============================================
  # 📱 ANDROID СБОРКА
  # ===============================================
  build-android:
    name: 📱 Android Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [test, build-modules]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔨 Build Debug APK
        run: ./gradlew :composeApp:assembleDebug --parallel --build-cache

      - name: 🔨 Build Release APK
        run: ./gradlew :composeApp:assembleRelease --parallel --build-cache

      - name: 📦 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: 📱 Android Debug APK
          path: composeApp/build/outputs/apk/debug/*.apk
          retention-days: 30

      - name: 📦 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: 📱 Android Release APK
          path: composeApp/build/outputs/apk/release/*.apk
          retention-days: 30

  # ===============================================
  # 🖥️ DESKTOP СБОРКА
  # ===============================================
  build-desktop:
    name: 🖥️ Desktop Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 25
    needs: [test, build-modules]

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔨 Build Desktop App
        run: ./gradlew :composeApp:createDistributable --parallel --build-cache
        shell: bash

      - name: 📦 Upload Desktop Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 🖥️ Desktop App (${{ matrix.os }})
          path: composeApp/build/compose/binaries/main/app/
          retention-days: 7

  # ===============================================
  # 🍎 iOS СБОРКА (только на macOS)
  # ===============================================
  build-ios:
    name: 🍎 iOS Build
    runs-on: macos-latest
    timeout-minutes: 35
    needs: [test, build-modules]

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔨 Compile iOS Target
        run: ./gradlew :composeApp:compileKotlinIosArm64 --parallel --build-cache
        shell: bash

      - name: 🔨 Compile iOS Simulator Target
        run: ./gradlew :composeApp:compileKotlinIosX64 --parallel --build-cache
        shell: bash

      - name: 📦 Upload iOS Compilation Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 🍎 iOS Compilation Reports
          path: composeApp/build/reports/
          retention-days: 7

  # ===============================================
  # 📊 АРХИТЕКТУРНЫЙ АНАЛИЗ
  # ===============================================
  architecture-analysis:
    name: 📊 Architecture Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Make gradlew executable
        run: chmod +x gradlew
        shell: bash

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: 🔍 Check Dependencies
        run: ./gradlew :composeApp:dependencies --configuration debugCompileClasspath

      - name: 📊 Generate Dependency Graph
        run: ./gradlew generateModuleGraphDot || echo "Module graph generation skipped"

      - name: 📈 Build Time Analysis
        run: ./gradlew :composeApp:assembleDebug --build-cache --parallel --profile

      - name: 📦 Upload Build Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 📊 Build Reports
          path: |
            build/reports/
            **/build/reports/
          retention-days: 7

  # ===============================================
  # ✅ ФИНАЛЬНАЯ ПРОВЕРКА
  # ===============================================
  final-check:
    name: ✅ Final Validation
    runs-on: ubuntu-latest
    needs: [build-android, build-desktop, build-ios, architecture-analysis]
    if: always()

    steps:
      - name: 📝 Write Job Summary
        shell: bash
        run: |
          echo "## 📋 CI Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "### 🔄 Jobs status" >> "$GITHUB_STEP_SUMMARY"
          echo "- 🧪 Tests: ${{ needs.test.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- 📱 Android: ${{ needs.build-android.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- 🖥️ Desktop: ${{ needs.build-desktop.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- 🍎 iOS: ${{ needs.build-ios.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- 📊 Analysis: ${{ needs.architecture-analysis.result }}" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "### 📦 Artifacts" >> "$GITHUB_STEP_SUMMARY"
          echo "- Test/Lint reports: test-and-lint-reports" >> "$GITHUB_STEP_SUMMARY"
          echo "- Module reports: reports-:core:model, reports-:core:common, reports-:core:database, reports-:domain:pressure, reports-:domain:development, reports-:data:pressure, reports-:data:development, reports-:designsystem, reports-:feature:pressure, reports-:feature:development" >> "$GITHUB_STEP_SUMMARY"

      - name: 📝 Save CI Summary file
        shell: bash
        run: |
          cat > ci-summary.md << 'EOF'
          # 📋 CI Summary

          ## 🔄 Jobs status
          - 🧪 Tests: ${{ needs.test.result }}
          - 📱 Android: ${{ needs.build-android.result }}
          - 🖥️ Desktop: ${{ needs.build-desktop.result }}
          - 🍎 iOS: ${{ needs.build-ios.result }}
          - 📊 Analysis: ${{ needs.architecture-analysis.result }}

          ## 📦 Artifacts
          - Test/Lint reports: test-and-lint-reports
          - Module reports: reports-:core:model, reports-:core:common, reports-:core:database, reports-:domain:pressure, reports-:domain:development, reports-:data:pressure, reports-:data:development, reports-:designsystem, reports-:feature:pressure, reports-:feature:development
          EOF

      - name: 📤 Upload CI Summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-summary
          path: ci-summary.md
          retention-days: 7
      - name: 📊 Check Build Results
        run: |
          echo "🎉 Build Status Summary:"
          echo "✅ Tests: ${{ needs.test.result }}"
          echo "📱 Android: ${{ needs.build-android.result }}"
          echo "🖥️ Desktop: ${{ needs.build-desktop.result }}"
          echo "🍎 iOS: ${{ needs.build-ios.result }}"
          echo "📊 Analysis: ${{ needs.architecture-analysis.result }}"

      - name: 🚀 Success Notification
        if: ${{ needs.build-android.result == 'success' && needs.build-desktop.result == 'success' }}
        run: echo "🎉 Все платформы успешно собраны! Многомодульная архитектура работает отлично!"